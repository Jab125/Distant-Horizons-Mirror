image: gradle:8.6-jdk17

# all stages need to be defined here
# TODO: Make stages depend on what is in versionProperties
stages:
  - build
  - api
  - pages

variables:
  # Pull core when building
  GIT_SUBMODULE_STRATEGY: recursive

before_script:
  - GRADLE_USER_HOME="$(pwd)/.gradle"
  - export GRADLE_USER_HOME


build:
  stage: build
  needs: []
  dependencies: []
  parallel:
    matrix:
      - MC_VER: ["1.16.5", "1.17.1", "1.18.2", "1.19.2", "1.19.4", "1.20.1", "1.20.2", "1.20.4"]
  script:
    # this both runs the unit tests and assembles the code
    # - ./gradlew clean -PmcVer="${MC_VER}" -PinfoGitCommit="${CI_COMMIT_SHA}" -PinfoGitBranch="${CI_COMMIT_BRANCH}" -PinfoBuildSource="GitLab CI (${CI_PIPELINE_ID})"
    - gradle build -PmcVer="${MC_VER}" -PinfoGitCommit="${CI_COMMIT_SHA}" -PinfoGitBranch="${CI_COMMIT_BRANCH}" -PinfoBuildSource="GitLab CI (${CI_PIPELINE_ID})"
    - gradle mergeJars -PmcVer="${MC_VER}" -PinfoGitCommit="${CI_COMMIT_SHA}" -PinfoGitBranch="${CI_COMMIT_BRANCH}" -PinfoBuildSource="GitLab CI (${CI_PIPELINE_ID})"
  artifacts:
    name: "NightlyBuild_${MC_VER}-${CI_COMMIT_SHORT_SHA}-${CI_COMMIT_TIMESTAMP}"
    paths:
      - Merged/*.jar
      - quilt/build/libs/*.jar
      - fabric/build/libs/*.jar
      - forge/build/libs/*.jar
      - neoforge/build/libs/*.jar
    exclude:
      # TODO: There is a lot of duplicate stuff here, try to maybe make it smaller
      - fabric/build/libs/*-all.jar
      - fabric/build/libs/*-sources.jar
      - quilt/build/libs/*-all.jar
      - quilt/build/libs/*-sources.jar
      - forge/build/libs/*-all.jar
      - forge/build/libs/*-sources.jar
      - neoforge/build/libs/*-all.jar
      - neoforge/build/libs/*-sources.jar
    expire_in: 14 days
    when: always
  cache:
    key: gradle-${MC_VER}
    policy: pull-push
    paths:
      - .gradle/caches/
      - .gradle/notifications/
      - coreSubProjects/api/build
      - coreSubProjects/core/build
      - build
  allow_failure: true


api:
  stage: api
  needs: []
  dependencies: []
  script:
    # this should only run for the API
    #- ./gradlew api:clean
    # this also runs unit tests
    - gradle api:build
    - gradle api:addSourcesToCompiledJar
  artifacts:
    name: "Api_NightlyBuild-${CI_COMMIT_SHORT_SHA}-${CI_COMMIT_TIMESTAMP}"
    paths:
      - coreSubProjects/api/build/libs/merged/*.jar
      # can be uncommented if we don't want a jar with the source code
      # - coreSubProjects/api/build/libs/*.jar
    exclude:
      - coreSubProjects/api/build/libs/merged/*-all.jar
      - coreSubProjects/api/build/libs/merged/*-sources.jar
    expire_in: 1 day
    when: always
  cache:
    key: gradle-api
    policy: pull-push
    paths:
      - .gradle/caches/
      - .gradle/notifications/
      - coreSubProjects/api/build
      - coreSubProjects/core/build
      - build
  allow_failure: true


# generate and publish API javadocs
pages:
  stage: pages
  needs: []
  dependencies: []
  script:
    # this should only run for the API
    #- ./gradlew api:clean  --no-daemon --gradle-user-home cache/;
    # this also runs unit tests
    - gradle api:build
    - gradle api:javadoc
    - mkdir public
    - cp -r $CI_PROJECT_DIR/coreSubProjects/api/build/docs/javadoc/. public
  artifacts:
    paths:
      - public
  # allow_failure: false
  cache:
    key: gradle-pages
    policy: pull-push
    paths:
      - .gradle/caches/
      - .gradle/notifications/
      - coreSubProjects/api/build
      - coreSubProjects/core/build
      - build
  allow_failure: true
